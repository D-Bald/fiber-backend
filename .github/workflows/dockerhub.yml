# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Workflow: First build the go binary, then the docker container
jobs: 
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # build go binary to ./dist in workspace
      - name: Generate go build files
        uses: thatisuday/go-cross-build@v1
        with:
            platforms: 'linux/amd64'
            package: '""'
            name: 'fiber-backend'
            compress: 'false'
            dest: 'dist'

      # Use the Docker Cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push docker container
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.alpine
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fiber-backend:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
